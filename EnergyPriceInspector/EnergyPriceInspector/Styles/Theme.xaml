<?xml version="1.0" encoding="UTF-8"?>
<ResourceDictionary xmlns="http://xamarin.com/schemas/2014/forms" 
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml">
    <Style TargetType="Shell" ApplyToDerivedTypes="True">
        <Setter Property="FlyoutBackgroundColor" Value="{AppThemeBinding Light={StaticResource BackgroundColor}, Dark={StaticResource AlternateBackgroundColor}}" />
    </Style>
    
    <Style x:Key="BaseStyle" TargetType="Element">
        <Setter Property="Shell.BackgroundColor" Value="{AppThemeBinding Light={StaticResource HeaderBarBackgroundColor}, Dark={StaticResource AlternateHeaderBarBackgroundColor}}" />
        <Setter Property="Shell.ForegroundColor" Value="{AppThemeBinding Light={StaticResource HeaderBarTextColor}, Dark={StaticResource AlternateHeaderBarTextColor}}" />
        <Setter Property="Shell.TitleColor" Value="{AppThemeBinding Light={StaticResource HeaderBarTextColor}, Dark={StaticResource AlternateHeaderBarTextColor}}"/>
        <Setter Property="Shell.DisabledColor" Value="#B4FFFFFF" />
        <Setter Property="Shell.UnselectedColor" Value="#95FFFFFF" />
        <Setter Property="Shell.TabBarBackgroundColor" Value="{AppThemeBinding Light={StaticResource HeaderBarBackgroundColor}, Dark={StaticResource AlternateHeaderBarBackgroundColor}}"/>
        <Setter Property="Shell.TabBarForegroundColor" Value="{AppThemeBinding Light={StaticResource HeaderBarTextColor}, Dark={StaticResource AlternateHeaderBarTextColor}}"/>
        <Setter Property="Shell.TabBarUnselectedColor" Value="#95FFFFFF"/>
        <Setter Property="Shell.TabBarTitleColor" Value="{AppThemeBinding Light={StaticResource HeaderBarTextColor}, Dark={StaticResource AlternateHeaderBarTextColor}}"/>
    </Style>
    <Style TargetType="TabBar" BasedOn="{StaticResource BaseStyle}" />
    <Style TargetType="FlyoutItem" BasedOn="{StaticResource BaseStyle}" />

    <!--
Default Styles for all Flyout Items
https://docs.microsoft.com/xamarin/xamarin-forms/app-fundamentals/shell/flyout#flyoutitem-and-menuitem-style-classes
-->
    <Style Class="FlyoutItemLabelStyle" TargetType="Label">
        <Setter Property="TextColor" Value="{AppThemeBinding Light={StaticResource HeaderBarTextColor}, Dark={StaticResource AlternateHeaderBarTextColor}}"></Setter>
    </Style>
    <Style Class="FlyoutItemLayoutStyle" TargetType="Layout" ApplyToDerivedTypes="True">
        <Setter Property="VisualStateManager.VisualStateGroups">
            <VisualStateGroupList>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal">
                        <VisualState.Setters>
                            <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource BackgroundColor}, Dark={StaticResource AlternateBackgroundColor}}" />
                            <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{AppThemeBinding Light={StaticResource TextColor}, Dark={StaticResource AlternateTextColor}}" />
                        </VisualState.Setters>
                    </VisualState>
                    <VisualState x:Name="Selected">
                        <VisualState.Setters>
                            <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource PrimaryBackground}, Dark={StaticResource AlternatePrimaryBackground}}"/>
                            <Setter TargetName="FlyoutItemLabel" Property="Label.TextColor" Value="{AppThemeBinding Light={StaticResource PrimaryText}, Dark={StaticResource AlternatePrimaryText}}" />
                        </VisualState.Setters>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateGroupList>
        </Setter>
    </Style>

    <Style TargetType="ContentPage">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource BackgroundColor}, Dark={StaticResource AlternateBackgroundColor}}" />
    </Style>

    <Style TargetType="Frame">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource BackgroundColor}, Dark={StaticResource AlternateBackgroundColor}}" />
    </Style>

    <Style TargetType="CollectionView">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource BackgroundColor}, Dark={StaticResource AlternateBackgroundColor}}" />
    </Style>
    
    <Style TargetType="Grid">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource BackgroundColor}, Dark={StaticResource AlternateBackgroundColor}}" />
    </Style>
    
    <Style TargetType="StackLayout">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource BackgroundColor}, Dark={StaticResource AlternateBackgroundColor}}" />
    </Style>

    <Style TargetType="RefreshView">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource BackgroundColor}, Dark={StaticResource AlternateBackgroundColor}}" />
        <Setter Property="RefreshColor" Value="{AppThemeBinding Light={StaticResource AccentColor}, Dark={StaticResource AlternateAccentColor}}" />
    </Style>

    <Style TargetType="TableView">
        <Setter Property="BackgroundColor" Value="{AppThemeBinding Light={StaticResource BackgroundColor}, Dark={StaticResource AlternateBackgroundColor}}" />
    </Style>
</ResourceDictionary>